

import "enum_type.proto";

message GroupStruct{
    required int64 group_id = 1;            //内部文章资源id
    required string title = 2;              //展示的标题
    required string thumb_url = 3;          //展示的缩略图
    required GroupMediaType media_type = 4; //包含的资源类型
    required string open_url = 5;           //文章schema
}

message UserRoleStruct{
    required RoleDisplayType role_display_type = 1;   //角色显示类型
    required string role_name = 2;  //角色名称
}

message UserApplyRoleInfoStruct{
    required int32 owner_forum_length            = 1;//用户已上任话题版主列表的长度
    required int32 apply_owner_forum_length      = 2;//用户正在申请话题版主列表的长度
    required int32 vice_owner_forum_length       = 3;//用户已上任话题小版主列表的长度
    required int32 apply_vice_owner_forum_length = 4;//用户正在申请话题小版主列表的长度
    required int32 user_to_forum_owner           = 5;//用户与某话题版主的关系，0——本话题版主，1-—正在申请本话题版主，2——不是版主也没有申请
    required int32 user_to_forum_vice_owner      = 6;//用户与某话题小版主的关系，0——本话题版主，1-—正在申请本话题小版主版主，2——不是小版主也没有申请
}

message ForumRoleInfoStruct{
    required int32 moderator_users_length      = 1;//版主列表长度
    required int32 vice_moderator_users_length = 2;//小版主列表长度
}

message UserStruct{
    optional int32 is_friend       = 1;    //是否是好友关系，是is_following的超集，废弃
    optional int32 is_blocked     = 2;    //是否被拉黑
    optional int32 is_blocking   = 3;    //是否拉黑
    optional string avatar_url          = 4;    //用户头像url
    optional string desc            = 5;    //用户签名描述
    optional int32 user_verified   = 6;    //是否是认证用户
    optional string screen_name         = 7;    //展示用户名
    required int64 user_id              = 8;    //用户id
    optional int32 is_following = 9;    //是否关注了
    optional UserRoleStruct user_role = 10;   //added代表用户在话题下的角色, 需要forum_id
    optional string verified_content = 11;   //认证原因
    repeated UserRoleStruct user_roles = 12;   //用户在话题下的角色列表, 需要forum_id(5.2版本开始使用)
    repeated UserIconStruct user_role_icons = 13; //用户的身份角色icon列表
    optional string user_auth_info = 14; //用户认证信息
    optional string schema = 15; //个人主页schema
    optional int64 followers_count = 16;//粉丝数
    optional int64 followings_count = 17;//关注数
    optional string user_decoration = 18;//佩饰
}

message SimpleUserStruct{
    required int64 user_id = 1;
    required string name = 2;
    required string verified_content = 3;
    required string avatar_url = 4;
    optional int32 follow = 5;
    optional int32 user_verified = 6;
    optional string user_auth_info = 7; //用户认证信息
}

message ViceOwnerInfoStruct{
    required UserStruct user_info = 1;//用户信息
    required int64 commit_count   = 2;//用户发帖数
    required int64 reply_count    = 3;//用户回帖数
    optional string reason        = 4;//用户申请理由
    optional string apply_time    = 5;//用户申请时间
}

message CommentStruct{
    required int64 comment_id           = 1;    //评论id
    required string content             = 2;    //评论内容
    required uint32 create_time         = 3;    //创建时间
    required uint32 digg_count          = 4;    //点赞数
    optional HasUserDigType user_digg   = 5;    //是否有用户点赞
    required UserStruct user            = 6;    //评论用户的信息
    optional CommentStruct reply_comment = 7;    //回复评论
}

message MoMoAdStruct{
    required string avatar = 1; // 头像 icon图
    required string url = 2; // 跳转链接
    required int64 ad_id = 3; // id
    required string name = 4; // 类似title，第一行文本
    required string sname = 5; // 似乎是位置信息
    required string distance = 6; // 距离 momo广告有用到
    required string sign = 7; // 最后一行淡色文本
    required int64 gid = 8; // 似乎是文章id
    required int32 show_ad_tag = 9; //客户端时候展示 '推广' 标记
}

message InterestItemStruct{
    required string name = 1;        //感兴趣的实体名，可以是话题名
    required string avatar_url = 2;  //感兴趣实体头像URL
    optional string open_url = 3;
}

message InterestForumStruct{
    required string reason = 1; //推荐理由
    repeated InterestItemStruct interest_forum_list = 2;
}

message OpenForumStruct{
    required ForumStruct forum_item = 1;
    optional string open_url = 2;
}

message RelatedForumStruct{
    required string reason = 1; //推荐理由
    repeated OpenForumStruct related_forum_list = 2;
}

message ForumItemStruct{
    required string forum_name          = 1;    //话题名称
    required int64 forum_id             = 2;    //话题id
    required int64 onlookers_count      = 3;    //话题围观数，目前改为围观人数follower_count
    optional string avatar_url          = 4;    //话题头像URL
    required string banner_url          = 5;    //话题头部URL
    required int64 talk_count           = 6;    //帖子数
    optional int64 like_time            = 7;    //请求人的关注时间
    optional string forum_hot_header    = 8;    //今日热门话题推荐标题
    optional string schema              = 9;
    //下面两个是给前端展示话题标记用
    //optional int32 unread_count         = 11;    //请求围观时候用户在话题下的未读数
    //optional int32 is_new               = 12;   //请求围观时候用户是否时新围观（取消再围观也是新）
}

//
message ForumClassStruct{
    required string class_name          = 1;    //分类名称
    repeated ForumItemStruct forum_list = 2;    //话题列表
}

message ImageUrlStruct{
    required int32 height               = 1;    //图片高
    required int32 width                = 2;    //图片宽
    required string uri                 = 3;    //图片uri
    required string url                 = 4;    //图片url
    repeated MagicUrlStruct url_list    = 5;    //图片url
    optional int32 type                 = 6;    //图片类型
    optional string open_url            = 7;
}

message MagicUrlStruct{
    required string url = 1;    //trick的方式,兼容老的数据格式,其实就是图片url
}

message TipsStruct{
    required string display_info        = 1;    //更新文案信息
    required int32 display_duration     = 2;    //文案提示停留时间
    required string click_url           = 3;    //点击url
}


message TabStruct{
    required TabIdType table_type           = 1;    //话题页的tab的id
    required string name                    = 2;    //话题页tab展示的文案
    required string url                     = 3;    //访问的url
    required TabParamType need_common_params = 4;    //是否需要通用参数
    required int32 refresh_interval         = 5;    //页面刷新的时间
    optional TabExtraStruct extra           = 6;    //附加字段
}

message TabExtraStruct{
    optional string umeng_name          = 1;    //统计字段,友盟统计
    optional string query_dict          = 2;    //搜索用的key_value的dict(json形式)(2016.07.01)
    optional TabRNInfoStruct rn_info    = 3;    //React Native的bundle信息
}

message TabRNInfoStruct{
    required string module_name        = 1;     //jsbundle的module name
    required string bundle_url         = 2;     //jsbundle的下载地址
    required string version            = 3;     //jsbundle的版本号
    required string props              = 4;     //jsbundle的初始化参数(JSON字符串)
    optional string md5                = 5;     //jsbundle的md5值
    optional string rn_min_version     = 6;     //jsbundle支持的最小RN版本号
}

message CommentBrowStruct{
    required int64 thread_id            = 1;    //动态/话题id
    required HasMoreType has_more       = 2;    //是否还有更多数据
    required int64 offset               = 3;    //偏移量
    required int32 total_count          = 4;    //请求数量
    repeated CommentStruct data         = 5;    //评论数据
}

message UserInfoStruct{
   required  UserFollowingType is_following         = 1;    //是否关注了
   required  int32 followings_count             = 2;    //关注数
   required  string mobile_hash                 = 3;
   required  string avatar_url                  = 4;    //用户头像
   required  string verified_agency             = 5;
   required  UserBlockingType is_blocking           = 6;    //是否拉黑
   required  UserVerifyType user_verified           = 7;    //是否是认证用户
   required  RecommendReasonType reason_type    = 8;    //推荐理由类型
   required  UserBlockedType is_blocked             = 9;    //是否被拉黑
   required  string desc                    = 10;   //用户签名描述
   required  string name                        = 11;   //用户名
   required  UserGenderType gender                  = 12;   //性别
   required  string screen_name                 = 13;   //展示用户名
   required  int64 user_id                      = 14;   //用户id
   required  UserFollowedType is_followed           = 15;   //是否被关注了
   required  int32 followers_count              = 16;   //粉丝数
   required  string verified_content            = 17;   //认证原因
   required  string recommend_reason            = 18;   //推荐理由
   required  string mobile                      = 19;   //mask过的电话号码
   optional  string user_auth_info              = 20;   //用户认证信息
}

message ThreadDataStruct{
    required int64 thread_id            = 1;    //动态/话题id
    required int64 cursor               = 2;    //游标
    required string reason              = 3;    //推荐理由
    //required ThreadDelType delete       = 4;   //是否被删除
    //required CellType cell_type         = 5;    //cell类型
    required uint32 modify_time         = 6;    //动态状态变更时间
    required TalkType item_type         = 7;    //动态的类型
    required int32 comment_count        = 8;    //评论数
    required int64 talk_type            = 9;   //评论的运营类型，按位来表示；0x1:加精 isStar，0x2:置顶 isTop TODO 这个能标示么？
    required int32 digg_count           = 10;   //点赞的总数
    required int32 digg_limit           = 11;   //可以赞的总数，0表示没有限制
    repeated UserStruct digg_list       = 12;   //点赞的用户数据
    repeated UserStruct friend_digg_list = 13;   //点赞的用户数据
    required string content             = 14;   //内容
    //required int64 user_role            = 15;   //用户角色，按位来表示；0x1：管理员
    required uint32 create_time         = 16;   //动态发表时间
    required string share_url           = 17;   //分享的url
    optional ForumItemStruct talk_item  = 18;   //所属的话题信息，只有是话题下的帖子时，会有此数据
    repeated ImageUrlStruct large_image_list    = 19;   //大图的url地址
    repeated ImageUrlStruct thumb_image_list    = 20;   //缩略图的url地址
    optional GroupStruct group          = 21;   //分享的文章数据
    optional ThreadDataStruct origin_item       = 22;   //转发的引用的数据
    required UserStruct user            = 23;   //发表的用户的数据
    repeated CommentStruct comments     = 24;   //评论列表数据
    required HasUserDigType user_digg   = 25;   //用户是否已经点赞
    required int32 show_comments_num    = 26;   //默认展示的评论数
    optional UserCommentSpecialStruct user_comment = 27; //用户评论页的展示的帖子内容和评论id
    optional GeographyStruct position = 28;           //地理位置
    required int32 rate = 29; //表示是否加热，0 不加热， 1 加热
    required int32 status = 30; //表示帖子状态 0表示删除 1表示所有人可见 2表示自见 4表示待审核
    optional string omitted_content = 31; //web页面缩略版content
    optional string time_desc = 32; //话题feed用来秒数时间的字符串，仅在feed数据中使用
    optional string title = 33; //帖子在爆料话题下时可能带title,未来会拓展到其他话题
    optional string phone = 34; //帖子在爆料话题下时可能带phone, 表示发帖人联系方式
    optional string score = 35; // 帖子评分
    optional int32  user_repin = 36;
    optional FollowInfoStruct forward_info = 37;
    optional RepostParamStruct repost_params = 38;
    optional string brand_info = 39;

    //这几个字段是服务端proto有，先用optional补充进来
    optional int64 forum_id = 41;
    optional string content_rich_span = 42;
    optional int32 flags = 43;
    optional int64 read_count = 44;
    optional int32 show_origin = 45;
    optional string show_tips = 46;
    optional int64 forward_num = 47;

    //这几个字段是客户端proto有（就在上面），但服务端里面没有的，先列在这
    //optional GroupStruct group          = 21;   //分享的文章数据   这个字段，后台proto里面没有
    //optional ThreadDataStruct origin_item       = 22;   //转发的引用的数据
    //optional UserCommentSpecialStruct user_comment = 27; //用户评论页的展示的帖子内容和评论id
    //optional string omitted_content = 31; //web页面缩略版content
    //optional string time_desc = 32; //话题feed用来秒数时间的字符串，仅在feed数据中使用
    //optional string phone = 34; //帖子在爆料话题下时可能带phone, 表示发帖人联系方式
    //optional string score = 35; // 帖子评分
}

// 广义的帖子结构，目前仅包含threaddata和广告,未来可能还包含别的结构
message GeneralThreadStruct{
    optional ThreadDataStruct thread = 1; //帖子类型
    optional MoMoAdStruct momo_ad = 2; //帖子类型
    optional InterestForumStruct interest_forum = 3; //猜你喜欢推荐类型
    optional RelatedForumStruct related_forum = 4; //好友关注&本话题关注
}

message ForumBannerStruct{
    optional ForumItemStruct forum_info     = 1;    //话题信息
    required ImageUrlStruct banner_imglist  = 2;    //头图图片
    required string banner_header_name      = 3;    //文案
    required string jump_url = 4; //跳转链接，只有跳到话题才有话题信息
}

message MessageListStruct {
    required HasMoreType has_more = 1;
    optional int32 min_cursor = 2;
    optional int32 max_cursor = 3;
    repeated MessageListDataStruct data = 4;
}

message MessageListUserInfoStruct {
   required  UserVerifyType user_verified       = 1;    //是否是认证用户
   required  int64 user_id                      = 2;   //用户id
   required  string avatar_url                  = 3;    //用户头像
   required  string screen_name                 = 4;   //展示用户名
   optional  string user_auth_info              = 5;   //用户认证信息
   optional  string schema = 6;
   optional  string verified_content = 7;
}

message MessageListDataStruct {
    required MessageListDataGroupStruct group = 1;
    optional int32 cursor = 2;
    optional int32 create_time = 3;
    optional MessageListUserInfoStruct user = 4;
    optional int32 dongtai_id = 5;
    optional int32 type = 6;
    optional int32 msg_id = 7;
    optional string content = 8;
}

message MessageListDataGroupStruct {
    optional string title = 1;
    optional string thumb_url = 2;
    //optional int32 display_status = 3;
    //optional int32 group_id = 4;
    //optional int32 item_type = 5;
}

message ForumStruct{
    required int64 forum_id = 1;
    optional string forum_name = 2;
    optional string desc = 3;
    optional int32 status = 4;
    optional string banner_url = 5;
    optional string avatar_url = 6;
    optional int64 follower_count = 7;
    optional int64 participant_count = 8;
    optional int64 talk_count = 9;
    optional int64 onlookers_count = 10;
    optional int64 like_time = 11;
    optional string share_url = 12;
    optional string introdution_url = 13;
    optional int32 show_et_status = 14; //在该话题下时候展示title,phone方框 用位标示 第0位为title, 第1位为phone
    optional int64 article_count = 15; //专栏话题的文章数量
    optional int32 forum_type_flags = 16; //话题类型： 2： 小视频活动
    optional string schema = 17;
    optional string sub_title = 18;
    optional int32 label_style = 19;
    optional int32 icon_style = 20;
    optional int64 concern_id = 21;
}

message TagStruct{
    required int32 tag_id = 1;      //推荐话题的tagid
    required string tag_name = 2;   //推荐话题的tag名
}

message ForumTagStruct{
    required int32 tag_id = 1;      //推荐话题的tagid
    required string tag_name = 2;   //推荐话题的tag名
    repeated ForumItemStruct forum_info = 3;        //推荐话题的话题信息列表
}

//以下两个是给app更新用的
message ButtonListItemStruct{
    required string appleid = 1;
    required string text = 2;
    required string action_url = 3;
}

message DataListItemStruct{
    repeated ButtonListItemStruct button_list = 1;
    required int32 force_update = 2;
    optional string content = 3;
    required int32 latency_seconds = 4;
    required int32 rule_id = 5;
    required string title = 6;
}

//用户评论页兼容逻辑特殊处理的数据结构
message UserCommentSpecialStruct{
    required string show_content = 1; //用户评论页展示的帖子内容
    required int64 comment_id = 2;    //用户评论页用户的评论id
}

message LoginUserInfoStruct{
    required int64 user_id = 1;
    repeated UserPermType user_perm = 2;
}

message GeographyStruct{
    optional float longitude = 1; // 经度
    optional float latitude = 2; // 纬度
    required string position = 3; // position = city + detail
}

//added
message RoleMemberStruct{
    required UserRoleStruct user_role = 1; //用户角色信息
    repeated UserStruct users = 2;  //当前角色的用户列表
}

message OwnerApplyHistoryItemStruct{
    required ForumItemStruct forum = 1;
    required int32 apply_status = 2;
}

message OwnerApplyHistorysStruct{
    required int32 cursor = 1;
    required HasMoreType has_more = 2;
    repeated OwnerApplyHistoryItemStruct history_list = 3;
}

message OwnerAuditingInfoStruct{
    required ForumItemStruct forum = 1;
    required int32 apply_count = 2;
}

message OwnerHotForumStruct{
    required ForumItemStruct forum = 1;
    required int32 is_follow = 2;
}

message UserIconStruct{
    required ImageUrlStruct icon_url = 1;   // 用户icon的url
    optional string action_url = 2;         // 跳转链接
}

message OwnerActionStatDataStruct{
    required int64 user_id = 1;
    required string user_name = 2;
    required int32 publish_count = 3;
    required int32 comment_count = 4;
    required int32 star_count = 5;
    required int32 delete_count = 6;
}

message ForumStatDataStruct{
    required string data_time = 1;
    required int32 publish_count = 2;
    required int32 comment_count = 3;
    required int32 new_follow_count = 4;
    repeated OwnerActionStatDataStruct owner_action_stat_data_list = 5;
}

message MovieReviewBasicInfoStruct{
    required string rate                = 1;    //电影评分
    required string participant_count   = 2;    //参与评分数
    optional string douban_rate         = 3;    //豆瓣评分
    optional string imdb_rate           = 4;    //imdb评分
}

message GroupLikeStruct{
    required int64 group_id             = 1;
    required string schema              = 2;
    required UserStruct user            = 3;    //发评论的用户数据
    required int32 digg_count           = 4;    //点赞数
    required int32 comment_count        = 5;    //评论数
    required string content             = 6;    //内容
    required uint32 create_time         = 7;    //发表时间
    required string title               = 8;    //标题
    repeated ActionStruct action_list   = 9;    //下拉箭头
}

//转发需求: 帖子model
message UgcDataStruct{
    required int64  thread_id                   = 1;   //帖子id
    optional string schema                      = 2;   //跳转schema
    optional string content                     = 3;   //帖子内容
    optional int32 digg_count                   = 4;   //点赞数
    optional int32 comment_count                = 5;   //评论数
    optional int32 max_text_line                = 6;   //帖子内容最大展示行数，服务端可控
    optional int32 ui_type                      = 7;   //内容类话题ui控制字段
    optional string share_url                   = 8;   //分享url
    optional int32 inner_ui_flag                = 9;   //ui内部控制字段
    repeated ImageUrlStruct large_image_list    = 10;  //大图的url地址
    repeated ImageUrlStruct thumb_image_list    = 11;  //缩略图的url地址
    optional UserStruct user                    = 12;  //发表的用户的数据
    repeated UserStruct friend_digg_list        = 13;  //点赞的用户数据
    repeated CommentStruct comments             = 14;  //评论列表数据
    repeated ActionStruct action_list           = 15;  //下拉箭头
    optional int32 user_digg                    = 16;  //用户是否已经点赞
    optional string title                       = 17;  //帖子标题
    optional ForumItemStruct forum              = 18;  //话题信息
    optional GroupStruct group                  = 19;  //分享的文章数据
    optional GeographyStruct position           = 20;  //地理位置
    optional string score                       = 21;  //评分
    optional int64 behot_time                   = 22;  //可以不需要或者stream来填
    optional int64 cursor                       = 23;  //可以不需要或者stream来填
    optional int32 cell_type                    = 24;
    repeated HashTagPositionStruct title_tags   = 25;  //标题tags信息
    repeated HashTagPositionStruct content_tags = 26;  //内容tags信息
    optional int32 cell_flag                    = 27; //控制cell的元素,5.6新增
    optional int32 cell_layout_style            = 28; //控制cell布局,5.6新增
    optional int32 is_stick                     = 29; //是否置顶,5.6新增
    optional int32 stick_style                  = 30; //置顶样式,5.6新增
    optional string stick_label                 = 31; //置顶label,5.6新增
    optional string label                       = 32; //帖子加精信息('加精','微头条'等)
    optional string reason                      = 33; //帖子推荐理由

    optional string content_rich_span    = 34;   //帖子内容富文本信息
    optional UgcDataStruct origin_thread        = 35; //被转发的帖子
    optional GroupInfoStruct origin_group      = 36; //被转发的文章
    optional UGCVideoDataStruct origin_ugc_video = 37; //被转发的抖音
    optional int32 repost_type                  = 38; //转发的形式,透传,211,212,213
    optional int32 status                       = 39; //帖子正常、已删除、审核中
    optional int64 create_time                  = 40; //帖子创建时间

    optional FollowInfoStruct forward_info      = 41; //转发相关的数据
    optional int32 default_text_line            = 42; //对应字段6 max_text_line 默认显示行数
    repeated ImageUrlStruct ugc_cut_image_list  = 43;  //单图裁图的url地址
    optional int64 read_count = 44; //阅读数
    optional string brand_info = 45;
    optional string content_decoration = 46;          //皮肤
}

message ActionStruct{
    required int32 action        = 1;
    required string desc         = 2;
}

message GroupInfoStruct{
    optional string source                                          = 1;    //来源
    optional string title                                           = 2;    //标题
    optional string open_url                                        = 3;    //源地址
    optional int64 behot_time                                       = 4;    //发布时间
    optional int32 tip                                              = 5;    //新闻运营额外信息
    repeated ImageUrlStruct image_list                              = 6;    //文章图片列表
    optional string city                                            = 7;    //城市
    repeated ImageUrlStruct large_image_list                        = 8;    //大图图片列表
    optional ImageUrlStruct middle_image                            = 9;    //中图模式图片
    repeated ImageUrlStruct detail_video_large_image                = 10;   //用于支持视频详情页的图片
    optional CommentStruct comment                                  = 11;   //feed流中带的评论信息
    optional int32 ban_comment                                      = 12;   //是否禁评
    optional int32 article_type                                     = 13;   //使用什么方式打开详情页
    optional int32 article_sub_type                                 = 14;   //高级可控webview
    optional int32 preload_web                                      = 15;   //控制web_view类型预加载
    optional string display_url                                     = 16;   //详情页地址栏点击后内容
    optional string display_title                                   = 17;   //详情页地址栏内容
    optional int64 item_version                                     = 18;   //文章版本
    optional string label                                           = 19;   //专题文案
    optional int64 subject_group_id                                 = 20;   //专题内“第一篇”文章的group_id
    optional int32 natant_level                                     = 21;   //浮层方案
    optional int32 group_flags                                      = 22;   //各种标记组合，按位组合
    optional string tc_head_text                                    = 23;   //group_flags设置了客户端转码时使用
    optional int32 label_style                                      = 24;   //标签的ui样式
    optional string info_desc                                       = 25;   //列表页中评论位置显示的文字
    optional int32 reback_flag                                      = 26;   //是否回流文章
    optional int32 video_style                                      = 27;   //视频样式
    optional string video_id                                        = 28;   //视频id
    optional string reason                                          = 29;
    optional int32 video_duration                                   = 30;   //视频时长
    optional string stick_label                                     = 31;   //置顶标签文字
    optional int32 stick_style                                      = 32;   //置顶样式
    optional string source_avatar                                   = 33;   //来源头像
    optional string source_open_url                                 = 34;   //点击来源跳转链接
    optional string source_desc                                     = 35;   //来源描述（所属类别等信息）
    optional string source_desc_open_url                            = 36;   //点击source_desc跳转链接
    optional int32 source_icon_style                                = 37;   //来源头像底色
    optional int32 is_subscribe                                     = 38;   //是否订阅PGC
    repeated ActionStruct action_list                               = 39;   //下拉箭头
    optional int32 cell_flag                                        = 40;   //控制样式
    optional int32 like_count                                       = 41;   //点赞数
    optional int32 comment_count                                    = 42;   //评论数
    optional string abstract                                        = 43;   //内容
    required int64 group_id                                         = 44;
    required int64 item_id                                          = 45;
    optional int32 aggr_type                                        = 46;
    optional int32 cell_type                                        = 47;   //文章类型默认是0
    optional MediaInfoStruct media_info                             = 48;
    optional int32 user_like                                        = 49;
    optional string share_url                                       = 50;   //分享链接仅android使用
    optional int32 bury_count                                       = 51;
    optional int32 ignore_web_transform                             = 52;
    optional MessageListUserInfoStruct user_info                    = 53;
    optional int32 digg_count                                       = 54;
    optional int32 read_count                                       = 55;
    optional int32 has_video                                        = 56;
    optional string keywords                                        = 57;
    optional string article_url                                     = 58;
    optional int32 has_m3u8_video                                   = 59;
    optional int32 has_mp4_video                                    = 60;
    optional string schema                                          = 61;
    optional int32 delete                                           = 62;
    optional int32 show_origin                                      = 63;
    optional string show_tips                                       = 64;
}

message MediaInfoStruct{
    optional string avatar_url = 1;
    required int64 media_id = 2;
    optional string name = 3;
    required int32 user_verified = 4;
    optional string user_auth_info = 5; //用户认证信息
}

message NormalThreadStruct{
        required HasMoreType has_more                   = 1;    //还有更多数据
        required int64 min_cursor                       = 2;
        required int64 max_cursor                       = 3;
        repeated GeneralThreadStruct finfo_list         = 4;    //动态内容数据
        repeated TabStruct table                        = 5;    //话题页标签数据
        required LoginUserInfoStruct login_user_info    = 6;    //当前登陆用户在当前话题的角色
        repeated ThreadDataStruct top_thread            = 7;   //置顶帖子
        optional TipsStruct tips                        = 8;    //提醒数据
}

message MovieStruct{
        required string name                 = 1;     //电影中文名
        required string english_name         = 2;     //电影英文名
        required string type                 = 3;     //电影类型
        required string area_info            = 4;     //上映地区、时长、上映时间
        required string actors               = 5;    //演员列表
        required string rate                 = 6;     //电影评分
        required int32 days                  = 7;     //还有多少天上映
        required string image_url            = 8;     //海报url
        required string movie_id              = 9;     //movie_id
        required string concern_id            = 10;    //关心id，方便客户端复用样式
        required string channel_id            = 11;    //channelid，混排需要
        optional string actor_url            = 12;    //演职员tab url
        optional string info_url             = 13;    //详情页tab url
        optional string uniqueID              = 14;     //有视频返回视频ID，没有返回0
        optional string group_flags           = 15;
        optional string purchase_url          = 16;     //购票页面的url(5.7增加)
        optional int32 rate_user_count        = 17;     //评分过的人数(5.7增加)
}

// for 5.5
message UserPositionStruct{
    required int32 start    = 1;    //名字起始位置
    required int32 end      = 2;    //名字结束位置
    required string schema  = 3;    //名字跳转链接
}
// for 5.5
message DiscussCommentStruct{
    required int64 comment_id                   = 1;    //评论id
    required string content                     = 2;    //评论内容
    required int32 create_time                 = 3;    //创建时间
    required int32 digg_count                  = 4;    //点赞数
    optional HasUserDigType user_digg           = 5;    //是否有用户点赞
    required UserStruct user                    = 6;    //评论用户的信息
    repeated UserPositionStruct user_position   = 7;    //名字位置
}
// for 5.5
message DiscussCommentBrowStruct{
    required int64 thread_id            = 1;    //动态/话题id
    required HasMoreType has_more       = 2;    //是否还有更多数据
    required int64 offset               = 3;    //偏移量
    required int32 total_count          = 4;    //请求数量
    repeated DiscussCommentStruct data         = 5;    //评论数据
}

// for 5.5
message RelatedNewStruct{
    required int32 aggr_type = 1;
    required int32 article_sub_type = 2;
    required int32 article_type = 3;
    required string article_url = 4;
    required int32 ban_comment = 5;
    required int32 behot_time = 6;
    required int32 bury_count = 7;
    required int32 comment_count = 8;
    required int32 digg_count = 9;
    required string display_title = 10;
    required string display_url = 11;
    required int64 group_id = 12;
    required int32 has_image = 13;
    required int32 has_m3u8_video = 14;
    required int32 has_mp4_video = 15;
    required int32 has_video = 16;
    required int32 hot = 17;
    repeated ImageUrlStruct image_list = 18;
    required int64 item_id = 19;
    required string keywords = 20;
    required int32 level = 21;
    required string media_name = 22;
    repeated ImageUrlStruct middle_image = 23; // todo
    required int32 preload_web = 24;
    required int32 repin_count = 25;
    required string share_url = 26;
    required string source = 27;
    required string tag = 28;
    required int64 tag_id = 29;
    required int32 tip = 30;
    required string url = 31;
    required int32 is_article = 32;
    required string tags = 33;
}

message ConcernWordsStruct{
    required string schema = 1;   //跳转链接
    required string word = 2;   //关键字
}

message HashTagPositionStruct{
    required int32 start    = 1;    //Tag起始位置(包括双##)
    required int32 end      = 2;    //Tag结束位置(包括双##)
    required string schema  = 3;    //Tag跳转链接
}

message ConcernForumStruct{
    required int64 forum_id                  = 1;
    required string forum_name               = 2;
    required int32 show_et_status            = 3;//在该话题下时候展示title,phone方框 用位标示 第0位为title, 第1位为phone
}

message ConcernTabStruct{
    required ConcernTabIdType table_type     = 1;//话题页的tab的id
    required string name                     = 2;//话题页tab展示的文案
    optional string url                      = 3;//访问的url
    required TabParamType need_common_params = 4;//是否需要通用参数
    required int32 refresh_interval          = 5;//页面刷新的时间
    optional TabExtraStruct extra            = 6;//附加字段
    required string sole_name                = 7;//唯一的名字,需要是英文,如:话题(forum)
    optional int32 tab_et_status             = 8;//控制当前tab发帖状态&是否展示新发的帖子,按位控制
}

message ConcernItemStruct{
    required string concern_id                = 1;//关心ID
    required string name                     = 2;//关心对象名称
    required int32 new_thread_count          = 3;//距离上次进入此话题新增帖子数
    required string avatar_url               = 4;//关心对象icon url
    required int32 concern_count             = 5;//关心对象被关心次数
    required int32 discuss_count             = 6;//关心对象讨论条数
    required int32 newly                     = 7;//显示new标记
    optional string open_url                 = 8;//跳转连接
    required int64 concern_time              = 9;//关心时间
    required int32 managing                  = 10;//是否是管理的
    optional string sub_title                = 11;//关心子title
}

message ConcernStruct{
    required string name                     = 1;//关心对象名称
    required string avatar_url               = 2;//关心图标
    required string concern_id                = 3;
    required int32 concern_count             = 4;//关心对象被关心次数
    required int32 discuss_count             = 5;//讨论次数
    required int64 concern_time              = 6;//关心时间
    required string share_url                = 7;//分享的URL(5.7.0在使用)
    required string introdution_url          = 8;//介绍页的URL
    optional string desc                     = 9;//描述(活动话题需要展示)
    required InnerForumType type             = 10;//关心的话题类型
    optional string extra                    = 11;//额外信息,dict的json结构(2016.07.01)
    optional ShareStruct share_data          = 12;//分享结构体,优先使用,无则使用share_url(2016.07.10)
    optional int64 read_count                = 13; //阅读数
    optional string desc_rich_span           = 14;//描述对应的富文本字段
}

message ShareStruct{
    required string title               = 1;// 分享的title
    required string content             = 2;// 分享的内容
    optional string image_url           = 3;// 分享带图片的url
    required string share_url           = 4;// 分享的url
}

message ConcernForTagStruct{
    required string concern_id       = 1; //关心对象id
    required string name            = 2; //关心对象名称
    required string avatar_url      = 3; //关心对象图标
    required int32 concern_count    = 4; //关心对象被关心的次数
    required int32 discuss_count    = 5; //讨论次数
    required int64 concern_time     = 6; //关心的时间，没有关心则为0
    required string desc            = 7; //关心的描述信息
    required int32 status           = 8; //关心对象的状态
}


message ConcernTagStruct{
    required int32 tag_id = 1;      //关心分类的tagid
    required string tag_name = 2;   //关心分类的tag名
    repeated ConcernForTagStruct concern_info = 3;        //推荐关心的关心对象信息列表
}

message RecommendTagStruct{
    required int32 tag_name = 1;    //推荐关心的分类的tag名
    required int32 count = 2;       //返回的推荐关心的数量
    required int32 has_more = 3;    //是否还可以继续加载
    repeated ConcernTagStruct concern_info = 4; //推荐关心的关心对象信息列表
}

// 关心主页附带Thread_list处使用
message ThreadListStruct{
    optional TipsStruct tips                        = 1;    //提醒信息
    optional HasMoreType has_more                   = 2;    //是否有更多数据
    required int64 min_cursor                       = 3;
    required int64 max_cursor                       = 4;
    repeated UgcDataStruct threads                  = 5;    //帖子列表(包含正常&置顶)
}

message PublisherPermissionIntroStruct{
    optional int32 normal_intro = 1;
    optional int32 video_intro_tips = 2;
    optional string video_intro_tips_text = 3;
    optional RedpackStruct redpack = 4;
}

message PublisherPermissionStruct{
    required int32 post_ugc_status = 1;//是否有发文权限，pgc账户全部都有，普通用户白名单中才有权限,发文包括发图文和发视频（发文章暂不支持）
    optional int32 ban_status = 2;//用户封禁状态，0未封禁，1封禁
    optional string ban_tips = 3;//"状态异常，只能发布普通视频，仅好友可见", //封禁用户提示
    optional string post_message_content_hint = 4;//发微头条提示文案
    optional int32 show_et_status = 5;//发微头条样式控制
    optional string first_tips = 6;//首次弹窗前的引导
    optional int32 publish_entrance_style = 7; //0是现有样式，1是头条圈顶部样式
    optional int32 disable_entrance = 8;   // 0表示有发布器入口，1表示没有
    optional int32 show_wenda = 9; 
    optional int32 show_author_delete_entrance = 10; //是否显示删除别人的评论&回复按钮 
    repeated PublishConfigStruct main_publisher_type = 11; //发布器顺序、名字、icon等 
    optional PublisherPermissionIntroStruct video_intro = 12; //小视频发布器红包引导
}


message UgcVideoDetailInfoStruct{
    required int32 group_flags = 1;
    required string video_id = 2;
    required int32 video_preloading_flag = 3;
    required int32 direct_play = 4;
    required ImageUrlStruct detail_video_large_image = 5;
    required int32 show_pgc_subscribe = 6;
}

message UgcVideoStruct{
    required UgcVideoDetailInfoStruct video_detail_info = 1;
    required int32 article_type = 2;
    required int64 publish_time = 3;
    required int32 video_duration = 4;
    required float video_proportion = 5;
    required int32 cell_type = 6;
    required string title = 7;
    required int32 has_video = 8;
    required int32 show_portrait_article = 9;
    required SimpleUserStruct user_info = 10;
    optional string source_open_url = 11;
    required int32 group_flags = 12;
    required string video_source = 13;
    required float video_proportion_article = 14;
    required int32 cell_layout_style = 15;
    repeated ImageUrlStruct large_image_list = 16;
    required int64 item_id = 17;
    required int32 show_portrait = 18;
    required string display_url = 19;
    required int32 cell_flag = 20;
    required string video_id = 21;
    required int32 is_subscribe = 22;
    required string source = 23;
    required int32 video_style = 24;
    optional MediaInfoStruct media_info = 25;
    required int64 group_id = 26;
}

message CommentTabInfoStruct{
    repeated string tabs                = 1;
    required int32 current_tab_index    = 2;
}

message NewCommentReplyStruct{
  required string id = 1;
  required string user_id = 2;
  required string user_name = 3;
  required string text = 4;
  required int32 user_verified = 5;
  optional int32 is_pgc_author = 6;
  repeated ImageUrlStruct author_badge = 7;
  optional string user_auth_info = 8;
  optional string content_rich_span = 9;
}

message NewCommentQutoedStruct{
  required string id = 1;
  required string user_id = 2;
  required string user_name = 3;
  required string text = 4;
  optional string content_rich_span = 5;
}

message NewCommentStruct{
    optional int32 is_followed              = 1;
    required string text                    = 2;
    optional int64 reply_count              = 3;
    optional int32 is_following             = 4;
    repeated NewCommentReplyStruct reply_list    = 5;
    required int32 user_verified            = 6;
    optional int32 is_blocking              = 7;
    required string user_id                 = 8;
    required int64 bury_count               = 9;
    repeated string author_badge            = 10;
    required string id                      = 11;
    optional string verified_reason         = 12;
    optional string platform                = 13;
    optional float  score                   = 14;
    required string user_name               = 15;
    required string user_profile_image_url  = 16;
    required int64 user_bury                = 17;
    required int64 user_digg                = 18;
    optional int32 is_blocked               = 19;
    optional int32 user_relation            = 20;
    optional int32 is_pgc_author            = 21;
    required int64 digg_count               = 22;
    required int64 create_time              = 23;
    optional string user_auth_info          = 24;
    optional NewCommentQutoedStruct reply_to_comment = 25;
    optional int32 bind_mobile          = 26;
    optional string content_rich_span       = 27;
    optional string user_decoration    = 28;
}

message NewCommentDataStruct{
    required NewCommentStruct comment = 1;
    required int32 cell_type          = 2;
}

message DeleteCommentDataStruct{
  optional string reply_dongtai_id    = 1;
  optional string dongtai_comment_id  = 2;
  required string dongtai_id          = 3;
}

message RichTextLinkStruct {
    required int32 start = 1;
    required int32 length = 2;
    optional string link = 3;
}

message RichTextAttributesStruct {
    repeated RichTextLinkStruct links = 1;
}

message RichTextStruct {
    optional string text = 1;
    optional RichTextAttributesStruct attributes = 2;
}

message ColdStartRecommendUserStruct {
    required string user_id                 = 1;
    optional string screen_name             = 2;
    optional string avatar_url              = 3;
    optional int32  gender                  = 4;
    optional string desc                    = 5;
    required bool   selected                = 6;
    optional string dongtai_content         = 7;
    optional string user_type               = 8;
    required string name                    = 9;
    optional string create_time             = 10;
    optional string media_id                = 11;
    optional string user_verified           = 12;
    optional string user_auth_info          = 13;
}

message FollowInfoStruct {
    optional int32 forward_count            = 1;
}

message PublishConfigStruct {
    required int32 type     = 1;    //发布器类型
    required string name  = 2;    //名字
    optional string schema = 3;    //发布器schema
    optional string icon = 4;     //底部发布器入口icon
    optional string top_icon = 5;  //顶部发布器入口icon
}

message CommonUserStruct{ //通用用户信息组件，以后可能会一直使用
    required CommonUserInfoStruct info              = 1;
    optional CommonUserRelationStruct relation      = 2;
    optional UserRelationCountStruct relation_count = 3;
    optional UserBlockedAndBlockingStruct block     = 4;
}

message CommonUserInfoStruct{
    required string user_id              = 1;
    optional string name                = 2;
    optional string desc                = 3;
    optional string schema              = 4;
    optional string avatar_url          = 5;
    optional string user_auth_info      = 6;

    optional bool user_verified         = 7;
    optional string verified_content    = 8;

    // 用户徽章系统
    optional repeated string medals = 9;

    optional string media_id = 10;
    optional string remark_name = 11;
    optional string user_decoration = 12;
}

message CommonUserRelationStruct{
    optional bool is_friend              = 1;
    optional bool is_following           = 2;
    optional bool is_followed            = 3;
}

// 用户关系计数
message UserRelationCountStruct {
    required int32 followings_count = 1; // 关注数
    required int32 followers_count  = 2; // 粉丝数
}

message RecommendCardStruct{
    required CommonUserStruct user             = 1;
    optional string recommend_reason           = 2;
    optional int32 recommend_type              = 3;
    optional ActivityStruct activity           = 4;
    optional string stats_place_holder         = 5;
    optional bool card_type                    = 6;//是否直接出的推荐人
    optional string profile_user_id            = 7;
}

message RecommendUserLargeCardStruct{
    required CommonUserStruct user             = 1;
    optional string recommend_reason           = 2;
    optional int32 recommend_type              = 3;
    optional bool selected                     = 4;
    optional string stats_place_holder         = 5;
}

message FollowChannelColdBootUserContainerStruct {
    required CommonUserStruct  user                       = 1;
    optional string            recommend_reason           = 2;
    optional bool              selected	                  = 3;
}

message FollowChannelColdBootRecommendUserCardStruct {
    required string                                   type          = 1;
    repeated FollowChannelColdBootUserContainerStruct user_cards    = 2;
    optional bool                                     selected      = 3;
}

message UserRelationContactFriendsUserStruct {
    required string user_id                = 1;
    required string screen_name            = 2;
    optional string mobile_name            = 3;
    optional string avatar_url             = 4;
    optional UserVerifyType user_verified  = 5;
    optional string user_auth_info         = 6;
    optional int32 is_friend               = 7;
    optional int32 is_following            = 8;
    optional int32 is_followed             = 9;
    optional string recommend_reason       = 10;
}

message UserRelationContactFriendsDataStruct {
    repeated UserRelationContactFriendsUserStruct users = 1;  // 通讯录推荐好友列表
    optional string title                               = 2;
}

message UGCVideoUserInfoStruct {
    optional int64 user_id              = 1;
    optional string name                = 2;
    optional string verified_content    = 3;
    optional int32 user_verified        = 4;
    optional string desc                = 5;
    optional string schema              = 6;
    optional string avatar_url          = 7;
    optional string user_auth_info      = 8;   
}

message UGCVideoUserRelationStruct {
    optional int32 is_friend        = 1;
    optional int32 is_following     = 2;
    optional int32 is_followed      = 3;   
}

message UGCVideoUserRelationCountStruct {
    optional int32 following_count  = 1;
    optional int32 follower_count   = 2;   
}

message UGCVideoUserStruct {
    optional UGCVideoUserInfoStruct info                    = 1;
    optional UGCVideoUserRelationStruct relation            = 2;
    optional UGCVideoUserRelationCountStruct relation_count = 3;   
}

message UGCVideoActionStruct {
    optional int32 forward_count = 1;
    optional int32 comment_count = 2;
    optional int32 read_count    = 3;
    optional int32 digg_count    = 4;
    optional int32 bury_count    = 5;
    optional int32 user_digg     = 6;
    optional int32 user_repin    = 7;
    optional int32 user_bury     = 8;
    optional int32 play_count    = 9; 
}

message UGCVideoPublishReasonStruct {
    optional string verb = 1;
    optional string noun = 2;   
}

message UGCVideoRawDataStruct {
    optional int64  item_id                             = 1;
    optional string title                               = 2;
    optional int64 create_time                          = 3;
    optional string app_schema                          = 4;
    optional string detail_schema                       = 5;
    optional UGCVideoUserStruct user                    = 6;
    optional UGCVideoActionStruct action                = 7;
    optional UGCVideoPublishReasonStruct publish_reason = 8;
    optional ImageUrlStruct thumb_image_list            = 9;  
    optional ImageUrlStruct large_image_list            = 10;   
}

message UGCVideoDataStruct {
    optional int64 group_id                     = 1;
    optional string show_tips                   = 2;
    optional int32 show_origin                  = 3;
    optional UGCVideoRawDataStruct raw_data     = 4;   
}

message RecommendSponsorStruct {
    required string icon_url = 1; //图标    
    required string target_url = 2; //跳转url
    required string label = 3;  //跳转标签 
}

message RedpackStruct {
    required string redpack_id = 1; //红包唯一标识
    optional int32 button_style = 2; //关注按钮样式，100：红包+红字白底；101：红包+白字蓝底
    required CommonUserInfoStruct user_info = 3; //用户信息，通用结构
    optional string subtitle = 4; //动作，展示在用户名下
    optional string content = 5; //文案，自定义
    required string token = 6; //token
}

message ActivityStruct {
    optional RedpackStruct redpack = 1; //红包活动
}

message UserExpressionConfigStruct {
    repeated int32 default_seq              = 1;
}

message TextUrlStruct {
    optional string text = 1; //文案
    optional string url = 2; //链接
}

message BonusStruct { 
    required string bonus_id = 1; //红包奖金ID
    required float amount = 2; //红包奖金金额
    optional TextUrlStruct show_tips = 3; //红包奖金下方的文案和链接
}

message RedpacketOpenResultStruct {
    required int32 status_code = 1; // -1：未登录；0: 领取失败； 1：领取成功
    optional BonusStruct bonus = 2; // 领取的红包
    optional string reason = 3; // 领取失败的理由
    optional TextUrlStruct footer = 4; // 底部跳转文案和链接
}

message AddFriendsUserWrapperStruct {
    required CommonUserStruct user = 1;
    optional string show_name = 2;
    optional string real_name = 3;
    optional string intro = 4;
}

message InviteFriendsUserWrapperStruct {
    optional CommonUserStruct user = 1;
    optional string contact_name = 2;
    optional string show_name = 3;  
    optional bool is_toutiao_user = 4;
    optional string intro = 5;
}

message AddFriendsDataStruct {
    repeated string tabs = 1;
    repeated string source = 2;
    repeated string server_source = 3;
    repeated AddFriendsUserWrapperStruct recommend_users = 4;
    optional bool has_more = 5;
    optional bool server_follow = 6;
}

message InviteFriendsDataStruct {
    repeated string server_source = 1;
    repeated InviteFriendsUserWrapperStruct contact_users = 2;
    optional bool has_more = 3;
}

message ContactsRedpacketCheckResultStruct {
    required int32 status = 1; // 0：不可领 1：可领 2：已领过
    required string redpack_id = 2; // 红包唯一标识
    required string token = 3; // token 校验参数
}

message ContactsRedpacketOpenResultStruct {
    required string redpack_id = 1; // 红包唯一标识
    required int32 redpack_amount = 2; // 红包金额
    required string my_redpacks_url = 3; // 我的红包链接
}

message MomentsRecommendUserStruct {
    required CommonUserStruct user     = 1;
    optional string real_name          = 2;
    optional int32 fans                = 3;
    optional string intro              = 4;
    optional string stats_place_holder = 5;
    optional int32 recommend_type      = 6;
    optional bool selected             = 7;
}

// 实体对应的用户行为数据，需要全部赋值
message ActionDataStruct {
    optional int64 forward_count = 1;            // 被转发数
    optional int64 comment_count = 2;            // 被评论数
    optional int64 read_count = 3;               // 被阅读数
    optional int64 digg_count = 4;               // 被点赞数
    optional int64 bury_count = 5;               // 被踩数
    optional int64 user_digg = 6;                // 是否被当前用户赞过 [0|1]
    optional int64 user_repin = 7;               // 是否被当前用户收藏过 [0|1]
    optional int64 user_bury = 8;                // 是否被当前用户踩过 [0|1]
    optional int64 play_count = 9;               // 播放数
}

// 实体对应的用户行为数据，需要全部赋值
message ShareInfoStruct {
    optional  string share_url = 1;           // 分享链接
    optional  string share_title = 2;         // 分享标题
    optional  string share_desc = 3;          // 分享描述
    optional  string share_weibo_desc = 4;    // 微博分享描述
    optional  ShareImageUrlStruct share_cover = 5; //分享图片信息
}

message UserBlockedAndBlockingStruct {
    optional int32 is_blocking   = 1;
    optional int32 is_blocked    = 2;
}

message PublishPostUserInfoStruct {
    required string user_id                 = 1;
    required string name                    = 2;
    optional string desc                    = 3;
    optional string schema                  = 4;
    optional string avatar_url              = 5;
    optional string user_auth_info          = 6;
    optional string user_verified           = 7;
    optional string verified_content        = 8;
    optional string media_id                = 9;
    optional string user_decoration         = 10;
}

message PublishPostUserRelationCountStruct {
    required int32 followings_count         = 1; // 关注数
    required int32 followers_count          = 2; // 粉丝数
}

message PublishPostUserRelationStruct {
    optional string remark_name             = 1;
}

message PublishPostUserStruct {
    required PublishPostUserInfoStruct info                    = 1;
    optional PublishPostUserRelationStruct relation            = 2;
    required PublishPostUserRelationCountStruct relation_count = 3;
}

message PublishPostUserHighlightStruct {
    repeated int32 name                     = 1; // 用户名高亮
    repeated int32 remark_name              = 2; // 备注名高亮
}

message PublishPostSearchUserStruct {
    required PublishPostUserStruct user               = 1;
    optional PublishPostUserHighlightStruct highlight = 2;
}

message PublishPostSearchUserContactStruct {
    required int32 offset                          = 1;
    required HasMoreType has_more                  = 2;
    repeated PublishPostSearchUserStruct recently  = 3;
    repeated PublishPostSearchUserStruct following = 4;
}

message PublishPostSearchUserSuggestStruct {
    required int32 offset                          = 1;
    required HasMoreType has_more                  = 2;
    repeated PublishPostSearchUserStruct following = 3;
    repeated PublishPostSearchUserStruct suggest   = 4;
}

message RecommendRedpacketDataStruct {
    required string id = 1; //红包id
    required int64 amount = 2;//金额
    required string sub_title = 3; //副标题
    required string schema = 4; //跳转schema
}

message RecommendRedpacketResultStruct {
    required RecommendRedpacketDataStruct redpack = 1; //红包
    required string title = 2; //标题
    repeated CommonUserStruct users = 3; //用户列表
    optional string show_label = 4; //"成功关注 张绍忠 xxx 等 5 人"
    optional string button_text = 5; //"添加更多好友"
    optional string button_schema = 6; //"sslocal://addfriend?xxx"
}

message ShareImageUrlStruct {
    optional string uri = 1;                 // URI
    optional repeated string url_list = 2;   // URL 列表
}

message PublishPostSearchHashtagItemStruct {
    required string forum_name          = 1;    //话题名称
    required int64 forum_id             = 2;    //话题id
    optional string avatar_url          = 3;    //话题头像URL
    optional string desc                = 4;    //话题描述
    required string schema              = 5;    //话题URL
    required string concern_id          = 6;    //隶属的关心id
}

message PublishPostHashtagHighlightStruct {
    repeated int32 forum_name           = 1;    //话题高亮
}

message PublishPostSearchHashtagStruct {
    required PublishPostSearchHashtagItemStruct forum    = 1;
    optional PublishPostHashtagHighlightStruct highlight = 2;
}

message PublishPostSearchHashtagHotStruct {
    required int32 offset                             = 1;
    required HasMoreType has_more                     = 2;
    repeated PublishPostSearchHashtagStruct recently  = 3;
    repeated PublishPostSearchHashtagStruct hot       = 4;
}

message PublishPostSearchHashtagSuggestStruct {
    required int32 offset                             = 1;
    required HasMoreType has_more                     = 2;
    repeated PublishPostSearchHashtagStruct suggest   = 3;
}

message RepostCommonContentStruct {
    optional string schema    = 1;
    optional string title     = 2;
    optional ImageUrlStruct cover_image = 3;
    optional int32 has_video = 4;
}

message RepostParamStruct {
    required int32 repost_type = 1;        //转发类型
    required int64 fw_id = 2;              //转发源内容ID
    required UGCTypeCode fw_id_type = 3;   // 转发源内容ID类型
    required int64 fw_user_id = 4;         // 转发源内容UID
    required int64 opt_id = 5;             // 转发父节点ID
    required UGCTypeCode opt_id_type = 6;  // 转发父节点ID类型
    optional string schema = 7;            // 跳转schema
    optional string title = 8;             // 标题
    optional string cover_url = 9;         // 封面图
}

message UserRelationContactCheckDataStruct {
    required bool should_popup                        = 1;    // 1表示弹窗，0表示不弹
    required bool has_collected                       = 2;    // 1表示已经收集过通讯录，0表示没有
    optional int32 popup_type                         = 3;    // 1无红包，2有红包
    optional uint32 next_time                         = 4;    // 608400，下次再检查的时间，单位s
    optional ContactsRedpacketCheckResultStruct redpack = 5;  // 红包数据
}

message FooterRepostStruct {
    optional  int64 id = 1;                               // ID
    optional  FooterRepostTypeCode repost_id_type = 2;    // 转发ID类型, 帖子1/评论2
    optional  string content = 3;                         // 正文
    optional  string content_rich_span = 4;               // 富文本
    optional  CommonUserStruct user = 5;                  // 用户信息
    optional  bool is_author = 6;                         // 是否展示作者标签
    optional  string detail_schema = 7;                   // 跳转URL
    optional  ActionDataStruct action = 8;                // 计数信息
    optional  int64 create_time = 9;                      // 创建时间
    optional  repeated ImageUrlStruct author_badge = 10;    //作者图片
}

message RecommendUserStoryCardStruct {
    required CommonUserStruct user                          = 1;  // user 
    optional string open_url                                = 2;  // 跳转url
    optional bool has_new                                   = 3;  // 是否未读过  
    optional string stats_place_holder                      = 4;       
    optional RecommendUserStoryVerifyInfoStruct story_label = 5;  // 认证信息
}

message RecommendUserStoryVerifyInfoStruct {
    optional string title                    = 1;       // 认证信息头
    required string reason                   = 2;       // 认证信息
}

message UGCThreadStoryDataStruct {
    required bool has_more    = 1;//是否还有数据
    repeated string stories = 2; //cell数据
    optional CommonUserStruct user = 3; //顶部用户信息
    optional string err_tips = 4;  //错误提示
    optional string tail = 5; // Story里上拉加载完后显示的提示文案
}


message UGCStoryCoverDataStruct {
    optional CommonUserStruct user = 1;              // 用户信息 
    required int64 content_id = 2;                   // 内容ID
    optional ImageUrlStruct cover_image = 3;         // 封面图
    optional int64 update_time = 4;                  // 内容更新时间
    optional string content = 5;                     // 上半部分展示的文字内容
    optional string content_rich_span = 6;           // 上半部分文字内容的富文本
    optional string origin_content = 7;              // 原内容展示的文字内容
    optional string origin_content_rich_span = 8;    // 原内容展示内容的富文本
    optional string detail_schema = 9;               // story详情跳转schema
    optional bool has_video = 10;                    // 是否有视频 
    optional int32 image_num = 11;                   // 图片数量
    optional int64 video_duration = 12;              // 视频播放时长
    optional UGCStoryCoverType display_type = 13;         // 布局样式控制,1:图文,2:小视频,3:纯文字,4:问答样式
    optional RecommendUserStoryVerifyInfoStruct story_label = 14;  // 认证信息
    optional int32 display_sub_type = 15;             //布局细节控制（比如角标之类）
}


message UserDecorationStruct {
    required string user_id = 1;
    required string user_decoration = 2;

}

message RecommendUserStoryHasMoreStruct {
    optional string title                    = 1;       // 显示文案
    optional string icon                     = 2;       // 图片显示url
    optional string schema                   = 3;       // 跳转schema
    optional string function_name            = 4;       // 埋点记录信息
    optional string night_icon               = 5;       // 夜间图片url
}

message QRCodeLinkInfoStruct {
    required string url = 1;
}
